
KILL FUNC *
KILL BUTTON *
DEFINE BUTTON "Mini51 ShowConfig","ConfigRegs()"
DEFINE BUTTON "Mini51 ChipErase" ,"ChipErase()"
DEFINE BUTTON "Mini51 WriteStdConfig" ,"WriteStdConfig()"
DEFINE BUTTON "Mini51 Reset" ,"RESET"

FUNC void InitandUnlock (void) 
{
	_WDWORD(0xe000edf0,0x05f0003);

	_WDWORD(0xe0002008,0x000000);
	_WDWORD(0xe000200C,0x000000);
	_WDWORD(0xe0002010,0x000000);
	_WDWORD(0xe0002014,0x000000);

	
	_WDWORD(0x50000100,0x59);
	_WDWORD(0x50000100,0x16);
	_WDWORD(0x50000100,0x88);
}
	
FUNC int ReadViaISP(int adr)
{
	int out;

   _WDWORD(0x5000c000,0x33);
   _WDWORD(0x5000c00c,0x00);  // ISP-Command=Read
   _WDWORD(0x5000c004,adr);  
   _WDWORD(0x5000c010,1);  
	 
   while (_RDWORD(0x5000c010)) {printf(".");}

	 out=_RDWORD(0x5000c008);

   _WDWORD(0x5000c000,0x32);
	 
	 return out;
}

FUNC void WriteViaISP(int adr, int dat)
{
	int out;

   _WDWORD(0x5000c000,0x33);
   _WDWORD(0x5000c00c,0x21);  // ISP-Command=Programe
   _WDWORD(0x5000c004,adr);  
   _WDWORD(0x5000c008,dat);  
	 
   _WDWORD(0x5000c010,1);  
	 
   while (_RDWORD(0x5000c010)) {printf(".");}
	 if (_RDWORD(0x5000c000)&0x40) {printf("ISP Error\n");return;}

   _WDWORD(0x5000c000,0x32);
}

FUNC void PageErase(int adr)
{
	int out;

   _WDWORD(0x5000c000,0x33);
   _WDWORD(0x5000c00c,0x22);  // ISP-Command=Programe
   _WDWORD(0x5000c004,adr);  
	 
   _WDWORD(0x5000c010,1);  
	 
   while (_RDWORD(0x5000c010)) {printf(".");}
	 if (_RDWORD(0x5000c000)&0x40) {printf("ISP Error\n");return;}

   _WDWORD(0x5000c000,0x32);
}

FUNC void WriteStdConfig()
{
	int conf1;
	int conf0;
	
	conf0=0x00700083; // Boot from APROM, Flash Unlocked
	conf1=0;

	PageErase(0x300000);
	WriteViaISP(0x300000,conf0);
	WriteViaISP(0x300004,conf1);
	printf("Done!\n");
}

FUNC void ConfigRegs()
{
	int conf0,conf1,id;
	InitandUnlock();
	printf("\nReading Configuration registers.\n\n");
	conf0=ReadViaISP(0x300000);
	conf1=ReadViaISP(0x300004);
	id=_RDWORD(0x50000000);
 	printf("Config0 (0x00300000):0x%X",conf0);
	if (!(conf0&2)) printf("   <-Flash is locked!");
	printf("\n");
 	printf("Config1 (0x00300004):0x%X\n",conf1);
	printf("Device ID           :0x%X   ",id);
	if (id==0x205100) printf("Mini51LAN Found!");
	if (id==0x205103) printf("Mini51ZAN Found!");
	if (id==0x205104) printf("Mini51TAN Found!");

	if (id==0x205200) printf("Mini52LAN Found!");
	if (id==0x205203) printf("Mini52ZAN Found!");
	if (id==0x205204) printf("Mini52TAN Found!");

	if (id==0x205400) printf("Mini54LAN Found!");
	if (id==0x205403) printf("Mini54ZAN Found!");
	if (id==0x205404) printf("Mini54TAN Found!");

	printf("\n\n");	
}

FUNC void ChipErase()
{
	int conf0;
	InitandUnlock();
	conf0=ReadViaISP(0x300000);
	if (conf0&2) 
	{
		printf("Flash is not locked! Doing nothing.\n");
		return;
	}
	
	printf("Flash is locked. \n");

   _WDWORD(0x5000c000,0x33);
   _WDWORD(0x5000c01c,0x01);  // Write one to undocumented register
	 
	 if (_RDWORD(0x5000c000)&0x40) {printf("ISP Error\n");return;}
	 if (_RDWORD(0x5000c010)) {printf("ISP Busy error\n");return;}

   _WDWORD(0x5000c00c,0x26);  // Undocumented ISP-Command Chip-Erase
   _WDWORD(0x5000c004,0);  
	 printf("Performing chip erase.\n");
   _WDWORD(0x5000c010,1);  
	 
   while (_RDWORD(0x5000c010)) {printf(".");}

	 if (_RDWORD(0x5000c000)&0x40) {printf("ISP Error\n");return;}

   _WDWORD(0x5000c000,0x32);

	printf("APROM:");
	if (ReadViaISP(0x00000000)==0xffffffff)
	{	printf("Erased!\n");} else
	{	printf("Error!\n");	return;}

	printf("LDROM:");
	if (ReadViaISP(0x00100000)==0xffffffff)
	{	printf("Erased!\n");} else
	{	printf("Error!\n");	return;}

	printf("Config:");
	if (ReadViaISP(0x0030000)==0xffffffff)
	{	printf("Erased!\n");} else
	{	printf("Error!\n");	return;}

  _WDWORD(0x5000c01c,0x01);  // Write zero to undocumented register
}


